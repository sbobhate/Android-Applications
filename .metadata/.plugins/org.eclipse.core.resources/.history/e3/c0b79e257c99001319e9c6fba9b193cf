package com.example.orient;

import android.os.Bundle;
import android.app.Activity;
import android.content.res.Resources;
import android.view.GestureDetector.SimpleOnGestureListener;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import android.support.v4.app.NavUtils;

public class Instructions extends Activity {
	
	TextView text;
	TextView text2;
	int counter;
	
	private static final int SWIPE_MIN_DISTANCE = 120;
	private static final int SWIPE_MAX_OFF_PATH = 250;
	private static final int SWIPE_THRESHOLD_VELOCITY = 200;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_instructions);
		// Show the Up button in the action bar.
		setupActionBar();
		
		text = (TextView) findViewById(R.id.textView1);
		text2 = (TextView) findViewById(R.id.textView2);
		counter = 0;
		changeData(counter);
	}
	
	class MyGestureDetector extends SimpleOnGestureListener {
	    @Override
	    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
	            float velocityY) {
	        try {
	            if (Math.abs(e1.getY() - e2.getY()) > SWIPE_MAX_OFF_PATH){
	                return false;
	            }
	            // right to left swipe
	            if (e1.getX() - e2.getX() > SWIPE_MIN_DISTANCE
	                    && Math.abs(velocityX) > SWIPE_THRESHOLD_VELOCITY) {
	                onLeftSwipe();
	            } 
	            // left to right swipe
	            else if (e2.getX() - e1.getX() > SWIPE_MIN_DISTANCE
	                    && Math.abs(velocityX) > SWIPE_THRESHOLD_VELOCITY) {
	                onRightSwipe();
	            }
	        } catch (Exception e) {

	        }
	        return false;
	      }

		private void onRightSwipe() {
			if (counter > 0)
			{
				counter -= 1;
				changeData(counter);
			}
			else
			{
				Toast.makeText(Instructions.this, "This is the First Step", Toast.LENGTH_SHORT).show();
			}
		}

		private void onLeftSwipe() {
			Resources res = getResources();
			String[] steps = res.getStringArray(R.array.steps);
			int length = steps.length;
			if (counter < (length-1)) 
			{
			counter += 1;
			changeData(counter);
			}
			else
			{
				Toast.makeText(Instructions.this , "No Further Steps", Toast.LENGTH_SHORT).show();
			}
	   }
	}
	
	public void increase (View v)
	{	
		Resources res = getResources();
		String[] steps = res.getStringArray(R.array.steps);
		int length = steps.length;
		if (counter < (length-1)) 
		{
		counter += 1;
		changeData(counter);
		}
		else
		{
			Toast.makeText(this, "No Further Steps", Toast.LENGTH_SHORT).show();
		}
	
	}
	
	public void decrease (View v)
	{	
		if (counter > 0)
		{
			counter -= 1;
			changeData(counter);
		}
		else
		{
			Toast.makeText(this, "This is the First Step", Toast.LENGTH_SHORT).show();
		}
	}
	
	public void changeData (int i)
	{	
		Resources res = getResources();
		String[] steps = res.getStringArray(R.array.steps);
		String[] instructions = res.getStringArray(R.array.instructions);
		text.setText(steps[i]);
		text2.setText(instructions[i]);
	}

	private void setupActionBar() {

		getActionBar().setDisplayHomeAsUpEnabled(true);

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.instructions, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			// This ID represents the Home or Up button. In the case of this
			// activity, the Up button is shown. Use NavUtils to allow users
			// to navigate up one level in the application structure. For
			// more details, see the Navigation pattern on Android Design:
			//
			// http://developer.android.com/design/patterns/navigation.html#up-vs-back
			//
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	} 

}
